plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version '1.7.2' // Check for the latest version
    id 'org.mangorage.build-tools' version '+'
}

group = 'org.mangorage'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://maven.fabricmc.net/"
    }
    flatDir {
        dirs 'libs'
        dirs 'run/versions/1.21.1'
    }
}

dependencies {
    remapper("net.fabricmc:tiny-remapper:0.10.1:fat")
    paperweight.paperDevBundle("1.21.1-R0.1-SNAPSHOT")

    implementation project(":SigmaCoreMixins")
    mixinJar(project(":SigmaCoreMixins"))

    ignite('libs:ignite')

    compileOnly "space.vectrix.ignite:ignite-api:1.1.0"
    compileOnly "net.fabricmc:sponge-mixin:0.15.2+mixin.0.8.7"
    compileOnly "io.github.llamalad7:mixinextras-common:0.4.1"
}

SigmaGradle {
    setServer("paper")
    setMCVersion("1.21.1")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}